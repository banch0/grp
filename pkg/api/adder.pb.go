// Code generated by protoc-gen-go. DO NOT EDIT.
// source: adder.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddData struct {
	Link                 string   `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddData) Reset()         { *m = AddData{} }
func (m *AddData) String() string { return proto.CompactTextString(m) }
func (*AddData) ProtoMessage()    {}
func (*AddData) Descriptor() ([]byte, []int) {
	return fileDescriptor_5175b95ab1e38417, []int{0}
}

func (m *AddData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddData.Unmarshal(m, b)
}
func (m *AddData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddData.Marshal(b, m, deterministic)
}
func (m *AddData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddData.Merge(m, src)
}
func (m *AddData) XXX_Size() int {
	return xxx_messageInfo_AddData.Size(m)
}
func (m *AddData) XXX_DiscardUnknown() {
	xxx_messageInfo_AddData.DiscardUnknown(m)
}

var xxx_messageInfo_AddData proto.InternalMessageInfo

func (m *AddData) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *AddData) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type GetData struct {
	Link                 string   `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetData) Reset()         { *m = GetData{} }
func (m *GetData) String() string { return proto.CompactTextString(m) }
func (*GetData) ProtoMessage()    {}
func (*GetData) Descriptor() ([]byte, []int) {
	return fileDescriptor_5175b95ab1e38417, []int{1}
}

func (m *GetData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetData.Unmarshal(m, b)
}
func (m *GetData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetData.Marshal(b, m, deterministic)
}
func (m *GetData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetData.Merge(m, src)
}
func (m *GetData) XXX_Size() int {
	return xxx_messageInfo_GetData.Size(m)
}
func (m *GetData) XXX_DiscardUnknown() {
	xxx_messageInfo_GetData.DiscardUnknown(m)
}

var xxx_messageInfo_GetData proto.InternalMessageInfo

func (m *GetData) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *GetData) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type QrObject struct {
	Crypto               string   `protobuf:"bytes,1,opt,name=crypto,proto3" json:"crypto,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QrObject) Reset()         { *m = QrObject{} }
func (m *QrObject) String() string { return proto.CompactTextString(m) }
func (*QrObject) ProtoMessage()    {}
func (*QrObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_5175b95ab1e38417, []int{2}
}

func (m *QrObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QrObject.Unmarshal(m, b)
}
func (m *QrObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QrObject.Marshal(b, m, deterministic)
}
func (m *QrObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QrObject.Merge(m, src)
}
func (m *QrObject) XXX_Size() int {
	return xxx_messageInfo_QrObject.Size(m)
}
func (m *QrObject) XXX_DiscardUnknown() {
	xxx_messageInfo_QrObject.DiscardUnknown(m)
}

var xxx_messageInfo_QrObject proto.InternalMessageInfo

func (m *QrObject) GetCrypto() string {
	if m != nil {
		return m.Crypto
	}
	return ""
}

type LastObject struct {
	Decod                string   `protobuf:"bytes,1,opt,name=decod,proto3" json:"decod,omitempty"`
	Numb                 int32    `protobuf:"varint,2,opt,name=numb,proto3" json:"numb,omitempty"`
	Hash                 string   `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LastObject) Reset()         { *m = LastObject{} }
func (m *LastObject) String() string { return proto.CompactTextString(m) }
func (*LastObject) ProtoMessage()    {}
func (*LastObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_5175b95ab1e38417, []int{3}
}

func (m *LastObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LastObject.Unmarshal(m, b)
}
func (m *LastObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LastObject.Marshal(b, m, deterministic)
}
func (m *LastObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LastObject.Merge(m, src)
}
func (m *LastObject) XXX_Size() int {
	return xxx_messageInfo_LastObject.Size(m)
}
func (m *LastObject) XXX_DiscardUnknown() {
	xxx_messageInfo_LastObject.DiscardUnknown(m)
}

var xxx_messageInfo_LastObject proto.InternalMessageInfo

func (m *LastObject) GetDecod() string {
	if m != nil {
		return m.Decod
	}
	return ""
}

func (m *LastObject) GetNumb() int32 {
	if m != nil {
		return m.Numb
	}
	return 0
}

func (m *LastObject) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type HashRequest struct {
	Password             string   `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HashRequest) Reset()         { *m = HashRequest{} }
func (m *HashRequest) String() string { return proto.CompactTextString(m) }
func (*HashRequest) ProtoMessage()    {}
func (*HashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5175b95ab1e38417, []int{4}
}

func (m *HashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HashRequest.Unmarshal(m, b)
}
func (m *HashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HashRequest.Marshal(b, m, deterministic)
}
func (m *HashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HashRequest.Merge(m, src)
}
func (m *HashRequest) XXX_Size() int {
	return xxx_messageInfo_HashRequest.Size(m)
}
func (m *HashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HashRequest proto.InternalMessageInfo

func (m *HashRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type HashResponse struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HashResponse) Reset()         { *m = HashResponse{} }
func (m *HashResponse) String() string { return proto.CompactTextString(m) }
func (*HashResponse) ProtoMessage()    {}
func (*HashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5175b95ab1e38417, []int{5}
}

func (m *HashResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HashResponse.Unmarshal(m, b)
}
func (m *HashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HashResponse.Marshal(b, m, deterministic)
}
func (m *HashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HashResponse.Merge(m, src)
}
func (m *HashResponse) XXX_Size() int {
	return xxx_messageInfo_HashResponse.Size(m)
}
func (m *HashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HashResponse proto.InternalMessageInfo

func (m *HashResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *HashResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type ValidateRequest struct {
	Password             string   `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateRequest) Reset()         { *m = ValidateRequest{} }
func (m *ValidateRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateRequest) ProtoMessage()    {}
func (*ValidateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5175b95ab1e38417, []int{6}
}

func (m *ValidateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateRequest.Unmarshal(m, b)
}
func (m *ValidateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateRequest.Marshal(b, m, deterministic)
}
func (m *ValidateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateRequest.Merge(m, src)
}
func (m *ValidateRequest) XXX_Size() int {
	return xxx_messageInfo_ValidateRequest.Size(m)
}
func (m *ValidateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateRequest proto.InternalMessageInfo

func (m *ValidateRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ValidateRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type ValidateResponse struct {
	Valid                bool     `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateResponse) Reset()         { *m = ValidateResponse{} }
func (m *ValidateResponse) String() string { return proto.CompactTextString(m) }
func (*ValidateResponse) ProtoMessage()    {}
func (*ValidateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5175b95ab1e38417, []int{7}
}

func (m *ValidateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateResponse.Unmarshal(m, b)
}
func (m *ValidateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateResponse.Marshal(b, m, deterministic)
}
func (m *ValidateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateResponse.Merge(m, src)
}
func (m *ValidateResponse) XXX_Size() int {
	return xxx_messageInfo_ValidateResponse.Size(m)
}
func (m *ValidateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateResponse proto.InternalMessageInfo

func (m *ValidateResponse) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

type AddRequest struct {
	X                    int32    `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5175b95ab1e38417, []int{8}
}

func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest.Unmarshal(m, b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
}
func (m *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(m, src)
}
func (m *AddRequest) XXX_Size() int {
	return xxx_messageInfo_AddRequest.Size(m)
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *AddRequest) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type AddResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddResponse) Reset()         { *m = AddResponse{} }
func (m *AddResponse) String() string { return proto.CompactTextString(m) }
func (*AddResponse) ProtoMessage()    {}
func (*AddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5175b95ab1e38417, []int{9}
}

func (m *AddResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddResponse.Unmarshal(m, b)
}
func (m *AddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddResponse.Marshal(b, m, deterministic)
}
func (m *AddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddResponse.Merge(m, src)
}
func (m *AddResponse) XXX_Size() int {
	return xxx_messageInfo_AddResponse.Size(m)
}
func (m *AddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddResponse proto.InternalMessageInfo

func (m *AddResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type Code struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Link                 string   `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Code) Reset()         { *m = Code{} }
func (m *Code) String() string { return proto.CompactTextString(m) }
func (*Code) ProtoMessage()    {}
func (*Code) Descriptor() ([]byte, []int) {
	return fileDescriptor_5175b95ab1e38417, []int{10}
}

func (m *Code) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Code.Unmarshal(m, b)
}
func (m *Code) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Code.Marshal(b, m, deterministic)
}
func (m *Code) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Code.Merge(m, src)
}
func (m *Code) XXX_Size() int {
	return xxx_messageInfo_Code.Size(m)
}
func (m *Code) XXX_DiscardUnknown() {
	xxx_messageInfo_Code.DiscardUnknown(m)
}

var xxx_messageInfo_Code proto.InternalMessageInfo

func (m *Code) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Code) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

type Link struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Link) Reset()         { *m = Link{} }
func (m *Link) String() string { return proto.CompactTextString(m) }
func (*Link) ProtoMessage()    {}
func (*Link) Descriptor() ([]byte, []int) {
	return fileDescriptor_5175b95ab1e38417, []int{11}
}

func (m *Link) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Link.Unmarshal(m, b)
}
func (m *Link) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Link.Marshal(b, m, deterministic)
}
func (m *Link) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Link.Merge(m, src)
}
func (m *Link) XXX_Size() int {
	return xxx_messageInfo_Link.Size(m)
}
func (m *Link) XXX_DiscardUnknown() {
	xxx_messageInfo_Link.DiscardUnknown(m)
}

var xxx_messageInfo_Link proto.InternalMessageInfo

func (m *Link) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Link) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func init() {
	proto.RegisterType((*AddData)(nil), "api.AddData")
	proto.RegisterType((*GetData)(nil), "api.GetData")
	proto.RegisterType((*QrObject)(nil), "api.QrObject")
	proto.RegisterType((*LastObject)(nil), "api.LastObject")
	proto.RegisterType((*HashRequest)(nil), "api.HashRequest")
	proto.RegisterType((*HashResponse)(nil), "api.HashResponse")
	proto.RegisterType((*ValidateRequest)(nil), "api.ValidateRequest")
	proto.RegisterType((*ValidateResponse)(nil), "api.ValidateResponse")
	proto.RegisterType((*AddRequest)(nil), "api.AddRequest")
	proto.RegisterType((*AddResponse)(nil), "api.AddResponse")
	proto.RegisterType((*Code)(nil), "api.Code")
	proto.RegisterType((*Link)(nil), "api.Link")
}

func init() { proto.RegisterFile("adder.proto", fileDescriptor_5175b95ab1e38417) }

var fileDescriptor_5175b95ab1e38417 = []byte{
	// 462 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x53, 0x51, 0x6f, 0xd3, 0x30,
	0x10, 0x6e, 0xda, 0x26, 0x64, 0xd7, 0xc2, 0x8a, 0x35, 0x50, 0xe5, 0x07, 0x40, 0x96, 0x10, 0xdb,
	0x24, 0x2a, 0x31, 0x78, 0xe1, 0xb1, 0xea, 0x24, 0x26, 0x34, 0x09, 0x2d, 0x48, 0x3c, 0xf1, 0xe2,
	0xd6, 0x16, 0x0d, 0x2b, 0x49, 0xb0, 0x5d, 0x68, 0xff, 0x3d, 0x3e, 0xdb, 0x89, 0xab, 0x8a, 0x07,
	0x78, 0xca, 0xdd, 0xe5, 0xbb, 0xef, 0xb3, 0xef, 0x3b, 0xc3, 0x88, 0x0b, 0x21, 0xd5, 0xac, 0x51,
	0xb5, 0xa9, 0xc9, 0x80, 0x37, 0x25, 0x7b, 0x03, 0x0f, 0xe6, 0x42, 0x5c, 0x73, 0xc3, 0x09, 0x81,
	0xe1, 0xa6, 0xac, 0xee, 0xa7, 0xc9, 0x8b, 0xe4, 0xfc, 0xa4, 0x70, 0x31, 0xd6, 0x56, 0xb5, 0x90,
	0xd3, 0xbe, 0xaf, 0x61, 0x8c, 0x2d, 0x1f, 0xa4, 0xf9, 0xaf, 0x16, 0x06, 0xf9, 0x9d, 0xfa, 0xb4,
	0xfc, 0x2e, 0x57, 0x86, 0x3c, 0x85, 0x6c, 0xa5, 0xf6, 0x8d, 0xa9, 0x43, 0x57, 0xc8, 0xd8, 0x47,
	0x80, 0x5b, 0xae, 0x4d, 0x40, 0x9d, 0x41, 0x2a, 0xa4, 0xed, 0x0d, 0x20, 0x9f, 0x20, 0x77, 0xb5,
	0xfd, 0xb1, 0x74, 0xdc, 0x69, 0xe1, 0x62, 0xac, 0xad, 0xb9, 0x5e, 0x4f, 0x07, 0x5e, 0x0f, 0x63,
	0x76, 0x01, 0xa3, 0x1b, 0xfb, 0x2d, 0xe4, 0xcf, 0xad, 0xd4, 0x86, 0x50, 0xc8, 0x1b, 0xae, 0xf5,
	0xef, 0x5a, 0xb5, 0x7c, 0x5d, 0xce, 0xde, 0xc1, 0xd8, 0x43, 0x75, 0x53, 0x57, 0x5a, 0x76, 0x74,
	0x49, 0xa4, 0x23, 0x13, 0x18, 0x48, 0xa5, 0xc2, 0x8d, 0x30, 0x64, 0x73, 0x38, 0xfd, 0xc2, 0x37,
	0xa5, 0xe0, 0x46, 0xfe, 0x83, 0x48, 0x47, 0xda, 0x3f, 0x38, 0xe3, 0x39, 0x4c, 0x22, 0x45, 0x10,
	0xb7, 0xb7, 0xfe, 0x85, 0x35, 0x47, 0x90, 0x17, 0x3e, 0xb1, 0x48, 0xb0, 0x1e, 0xb5, 0x3a, 0x63,
	0x48, 0x76, 0xee, 0x7f, 0x5a, 0x24, 0x3b, 0xcc, 0xf6, 0x61, 0x1c, 0xc9, 0x9e, 0xbd, 0x84, 0x91,
	0x43, 0x06, 0x3a, 0x3b, 0x6a, 0x25, 0xf5, 0x76, 0x63, 0x02, 0x3e, 0x64, 0xec, 0x12, 0x86, 0x0b,
	0x6b, 0x0b, 0x79, 0x04, 0xfd, 0xa0, 0x95, 0x16, 0x36, 0xea, 0xec, 0xec, 0x47, 0x3b, 0x11, 0x7b,
	0x8b, 0xb6, 0xfe, 0x05, 0x7b, 0x6c, 0xf3, 0x95, 0x81, 0x74, 0x8e, 0x0b, 0x46, 0x2e, 0x61, 0x60,
	0x03, 0x72, 0x3a, 0xb3, 0x2b, 0x36, 0x8b, 0x67, 0xa7, 0x93, 0x58, 0xf0, 0x47, 0x64, 0x3d, 0xf2,
	0x1c, 0xd2, 0xc5, 0x5a, 0xae, 0xee, 0xc9, 0x89, 0xfb, 0x89, 0x07, 0xa3, 0x3e, 0x44, 0x5d, 0x0b,
	0x78, 0x06, 0xc3, 0xcf, 0xb2, 0x12, 0x24, 0x16, 0x69, 0x84, 0xb2, 0x9e, 0x55, 0xcd, 0x0b, 0xf9,
	0xad, 0xd4, 0xc6, 0x0a, 0xbf, 0x86, 0xe1, 0x8d, 0x73, 0xcc, 0x01, 0x0e, 0x76, 0x80, 0x3e, 0x3e,
	0xa8, 0x74, 0xda, 0xef, 0x21, 0x6f, 0x3d, 0x20, 0x67, 0x0e, 0x70, 0xe4, 0x2a, 0x7d, 0x72, 0x54,
	0x6d, 0x5b, 0xaf, 0xbe, 0x42, 0x76, 0xa7, 0xdc, 0x14, 0x5f, 0x41, 0xb6, 0x50, 0x12, 0x29, 0xc6,
	0xed, 0xf5, 0xf0, 0x71, 0xd0, 0x87, 0x2e, 0x6b, 0xf7, 0xde, 0xaa, 0x5d, 0x40, 0x76, 0x8d, 0x6b,
	0xdc, 0x02, 0xc3, 0x2b, 0xa2, 0x7e, 0x4c, 0x71, 0xf9, 0x59, 0x6f, 0x99, 0xb9, 0x27, 0xfa, 0xf6,
	0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x13, 0xc8, 0x48, 0x5e, 0xb1, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AdderClient is the client API for Adder service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdderClient interface {
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error)
	Check(ctx context.Context, in *Code, opts ...grpc.CallOption) (*Link, error)
	Send(ctx context.Context, in *Link, opts ...grpc.CallOption) (*Code, error)
}

type adderClient struct {
	cc *grpc.ClientConn
}

func NewAdderClient(cc *grpc.ClientConn) AdderClient {
	return &adderClient{cc}
}

func (c *adderClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error) {
	out := new(AddResponse)
	err := c.cc.Invoke(ctx, "/api.Adder/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adderClient) Check(ctx context.Context, in *Code, opts ...grpc.CallOption) (*Link, error) {
	out := new(Link)
	err := c.cc.Invoke(ctx, "/api.Adder/Check", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adderClient) Send(ctx context.Context, in *Link, opts ...grpc.CallOption) (*Code, error) {
	out := new(Code)
	err := c.cc.Invoke(ctx, "/api.Adder/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdderServer is the server API for Adder service.
type AdderServer interface {
	Add(context.Context, *AddRequest) (*AddResponse, error)
	Check(context.Context, *Code) (*Link, error)
	Send(context.Context, *Link) (*Code, error)
}

// UnimplementedAdderServer can be embedded to have forward compatible implementations.
type UnimplementedAdderServer struct {
}

func (*UnimplementedAdderServer) Add(ctx context.Context, req *AddRequest) (*AddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedAdderServer) Check(ctx context.Context, req *Code) (*Link, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Check not implemented")
}
func (*UnimplementedAdderServer) Send(ctx context.Context, req *Link) (*Code, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}

func RegisterAdderServer(s *grpc.Server, srv AdderServer) {
	s.RegisterService(&_Adder_serviceDesc, srv)
}

func _Adder_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdderServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Adder/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdderServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adder_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Code)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdderServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Adder/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdderServer).Check(ctx, req.(*Code))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adder_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Link)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdderServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Adder/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdderServer).Send(ctx, req.(*Link))
	}
	return interceptor(ctx, in, info, handler)
}

var _Adder_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Adder",
	HandlerType: (*AdderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Adder_Add_Handler,
		},
		{
			MethodName: "Check",
			Handler:    _Adder_Check_Handler,
		},
		{
			MethodName: "Send",
			Handler:    _Adder_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "adder.proto",
}

// RegisterClient is the client API for Register service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RegisterClient interface {
	Hash(ctx context.Context, in *HashRequest, opts ...grpc.CallOption) (*HashResponse, error)
	Validate(ctx context.Context, in *ValidateRequest, opts ...grpc.CallOption) (*ValidateResponse, error)
}

type registerClient struct {
	cc *grpc.ClientConn
}

func NewRegisterClient(cc *grpc.ClientConn) RegisterClient {
	return &registerClient{cc}
}

func (c *registerClient) Hash(ctx context.Context, in *HashRequest, opts ...grpc.CallOption) (*HashResponse, error) {
	out := new(HashResponse)
	err := c.cc.Invoke(ctx, "/api.Register/Hash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registerClient) Validate(ctx context.Context, in *ValidateRequest, opts ...grpc.CallOption) (*ValidateResponse, error) {
	out := new(ValidateResponse)
	err := c.cc.Invoke(ctx, "/api.Register/Validate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RegisterServer is the server API for Register service.
type RegisterServer interface {
	Hash(context.Context, *HashRequest) (*HashResponse, error)
	Validate(context.Context, *ValidateRequest) (*ValidateResponse, error)
}

// UnimplementedRegisterServer can be embedded to have forward compatible implementations.
type UnimplementedRegisterServer struct {
}

func (*UnimplementedRegisterServer) Hash(ctx context.Context, req *HashRequest) (*HashResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hash not implemented")
}
func (*UnimplementedRegisterServer) Validate(ctx context.Context, req *ValidateRequest) (*ValidateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Validate not implemented")
}

func RegisterRegisterServer(s *grpc.Server, srv RegisterServer) {
	s.RegisterService(&_Register_serviceDesc, srv)
}

func _Register_Hash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegisterServer).Hash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Register/Hash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegisterServer).Hash(ctx, req.(*HashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Register_Validate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegisterServer).Validate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Register/Validate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegisterServer).Validate(ctx, req.(*ValidateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Register_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Register",
	HandlerType: (*RegisterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hash",
			Handler:    _Register_Hash_Handler,
		},
		{
			MethodName: "Validate",
			Handler:    _Register_Validate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "adder.proto",
}

// QrCodeClient is the client API for QrCode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QrCodeClient interface {
	Create(ctx context.Context, in *AddData, opts ...grpc.CallOption) (*QrObject, error)
	Decode(ctx context.Context, in *GetData, opts ...grpc.CallOption) (*LastObject, error)
}

type qrCodeClient struct {
	cc *grpc.ClientConn
}

func NewQrCodeClient(cc *grpc.ClientConn) QrCodeClient {
	return &qrCodeClient{cc}
}

func (c *qrCodeClient) Create(ctx context.Context, in *AddData, opts ...grpc.CallOption) (*QrObject, error) {
	out := new(QrObject)
	err := c.cc.Invoke(ctx, "/api.QrCode/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qrCodeClient) Decode(ctx context.Context, in *GetData, opts ...grpc.CallOption) (*LastObject, error) {
	out := new(LastObject)
	err := c.cc.Invoke(ctx, "/api.QrCode/Decode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QrCodeServer is the server API for QrCode service.
type QrCodeServer interface {
	Create(context.Context, *AddData) (*QrObject, error)
	Decode(context.Context, *GetData) (*LastObject, error)
}

// UnimplementedQrCodeServer can be embedded to have forward compatible implementations.
type UnimplementedQrCodeServer struct {
}

func (*UnimplementedQrCodeServer) Create(ctx context.Context, req *AddData) (*QrObject, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedQrCodeServer) Decode(ctx context.Context, req *GetData) (*LastObject, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Decode not implemented")
}

func RegisterQrCodeServer(s *grpc.Server, srv QrCodeServer) {
	s.RegisterService(&_QrCode_serviceDesc, srv)
}

func _QrCode_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QrCodeServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.QrCode/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QrCodeServer).Create(ctx, req.(*AddData))
	}
	return interceptor(ctx, in, info, handler)
}

func _QrCode_Decode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QrCodeServer).Decode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.QrCode/Decode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QrCodeServer).Decode(ctx, req.(*GetData))
	}
	return interceptor(ctx, in, info, handler)
}

var _QrCode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.QrCode",
	HandlerType: (*QrCodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _QrCode_Create_Handler,
		},
		{
			MethodName: "Decode",
			Handler:    _QrCode_Decode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "adder.proto",
}
